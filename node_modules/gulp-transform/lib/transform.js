'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.transform = transform;

var _es6Promise = require('es6-promise');

var _lodash = require('lodash');

var _err = require('./err');

function transform(fn, contents, file, _ref) {
  var encoding = _ref.encoding;
  var thisArg = _ref.thisArg;

  var decoded = encoding ? contents.toString(encoding) : contents;
  var transformed = fn.call(thisArg, decoded, file);

  return _es6Promise.Promise.resolve(transformed).then(toBuffer);
}

function toBuffer(contents) {
  if ((0, _lodash.isBuffer)(contents)) {
    return contents;
  } else if (contents != null) {
    return new Buffer(String(contents));
  } else {
    (0, _err.err)('transformFn may not return or resolve to null or undefined');
  }
}